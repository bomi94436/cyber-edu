// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`main actions should create actions 1`] = `
Array [
  Object {
    "payload": Object {
      "name": "studentId",
      "value": 207195076,
    },
    "type": "main/SET_REGISTER",
  },
]
`;

exports[`main async action fails 1`] = `
Array [
  Object {
    "type": "main/POST_REGISTER",
  },
  Object {
    "error": true,
    "payload": [Error: Request failed with status code 400],
    "type": "main/POST_REGISTER_FAILURE",
  },
]
`;

exports[`main async action postRegister dispatches proper action 1`] = `
Array [
  Object {
    "type": "main/POST_REGISTER",
  },
  Object {
    "payload": Object {
      "response": Object {
        "config": Object {
          "adapter": [Function],
          "data": "{\\"role\\":\\"professor\\",\\"studentId\\":207195076,\\"password\\":\\"bomibomi\\",\\"name\\":\\"정보미\\",\\"email\\":\\"boo0729611@gmail.com\\",\\"phone\\":1012345678}",
          "headers": Object {
            "Accept": "application/json, text/plain, */*",
            "Content-Length": 133,
            "Content-Type": "application/json;charset=utf-8",
            "User-Agent": "axios/0.19.2",
          },
          "maxContentLength": -1,
          "method": "post",
          "timeout": 0,
          "transformRequest": Array [
            [Function],
          ],
          "transformResponse": Array [
            [Function],
          ],
          "url": "/api/auth/register",
          "validateStatus": [Function],
          "xsrfCookieName": "XSRF-TOKEN",
          "xsrfHeaderName": "X-XSRF-TOKEN",
        },
        "data": Object {
          "message": "회원가입 완료",
        },
        "headers": Object {
          "content-type": "application/json",
        },
        "request": OverriddenClientRequest {
          "_contentLength": null,
          "_events": Object {
            "abort": [Function],
            "aborted": [Function],
            "error": [Function],
            "socket": [Function],
            "timeout": [Function],
          },
          "_eventsCount": 5,
          "_hasBody": true,
          "_header": null,
          "_headerSent": false,
          "_last": false,
          "_maxListeners": undefined,
          "_onPendingData": [Function],
          "_redirectable": Writable {
            "_currentRequest": [Circular],
            "_currentUrl": "http:/api/auth/register",
            "_events": Object {
              "error": [Function],
              "response": [Function],
            },
            "_eventsCount": 2,
            "_maxListeners": undefined,
            "_onNativeResponse": [Function],
            "_options": Object {
              "agent": undefined,
              "agents": Object {
                "http": undefined,
                "https": undefined,
              },
              "auth": undefined,
              "headers": Object {
                "Accept": "application/json, text/plain, */*",
                "Content-Length": 133,
                "Content-Type": "application/json;charset=utf-8",
                "User-Agent": "axios/0.19.2",
              },
              "hostname": null,
              "maxBodyLength": 10485760,
              "maxRedirects": 21,
              "method": "POST",
              "nativeProtocols": Object {
                "http:": Object {
                  "Agent": [Function],
                  "ClientRequest": [Function],
                  "IncomingMessage": [Function],
                  "METHODS": Array [
                    "ACL",
                    "BIND",
                    "CHECKOUT",
                    "CONNECT",
                    "COPY",
                    "DELETE",
                    "GET",
                    "HEAD",
                    "LINK",
                    "LOCK",
                    "M-SEARCH",
                    "MERGE",
                    "MKACTIVITY",
                    "MKCALENDAR",
                    "MKCOL",
                    "MOVE",
                    "NOTIFY",
                    "OPTIONS",
                    "PATCH",
                    "POST",
                    "PROPFIND",
                    "PROPPATCH",
                    "PURGE",
                    "PUT",
                    "REBIND",
                    "REPORT",
                    "SEARCH",
                    "SOURCE",
                    "SUBSCRIBE",
                    "TRACE",
                    "UNBIND",
                    "UNLINK",
                    "UNLOCK",
                    "UNSUBSCRIBE",
                  ],
                  "OutgoingMessage": [Function],
                  "STATUS_CODES": Object {
                    "100": "Continue",
                    "101": "Switching Protocols",
                    "102": "Processing",
                    "103": "Early Hints",
                    "200": "OK",
                    "201": "Created",
                    "202": "Accepted",
                    "203": "Non-Authoritative Information",
                    "204": "No Content",
                    "205": "Reset Content",
                    "206": "Partial Content",
                    "207": "Multi-Status",
                    "208": "Already Reported",
                    "226": "IM Used",
                    "300": "Multiple Choices",
                    "301": "Moved Permanently",
                    "302": "Found",
                    "303": "See Other",
                    "304": "Not Modified",
                    "305": "Use Proxy",
                    "307": "Temporary Redirect",
                    "308": "Permanent Redirect",
                    "400": "Bad Request",
                    "401": "Unauthorized",
                    "402": "Payment Required",
                    "403": "Forbidden",
                    "404": "Not Found",
                    "405": "Method Not Allowed",
                    "406": "Not Acceptable",
                    "407": "Proxy Authentication Required",
                    "408": "Request Timeout",
                    "409": "Conflict",
                    "410": "Gone",
                    "411": "Length Required",
                    "412": "Precondition Failed",
                    "413": "Payload Too Large",
                    "414": "URI Too Long",
                    "415": "Unsupported Media Type",
                    "416": "Range Not Satisfiable",
                    "417": "Expectation Failed",
                    "418": "I'm a Teapot",
                    "421": "Misdirected Request",
                    "422": "Unprocessable Entity",
                    "423": "Locked",
                    "424": "Failed Dependency",
                    "425": "Unordered Collection",
                    "426": "Upgrade Required",
                    "428": "Precondition Required",
                    "429": "Too Many Requests",
                    "431": "Request Header Fields Too Large",
                    "451": "Unavailable For Legal Reasons",
                    "500": "Internal Server Error",
                    "501": "Not Implemented",
                    "502": "Bad Gateway",
                    "503": "Service Unavailable",
                    "504": "Gateway Timeout",
                    "505": "HTTP Version Not Supported",
                    "506": "Variant Also Negotiates",
                    "507": "Insufficient Storage",
                    "508": "Loop Detected",
                    "509": "Bandwidth Limit Exceeded",
                    "510": "Not Extended",
                    "511": "Network Authentication Required",
                  },
                  "Server": [Function],
                  "ServerResponse": [Function],
                  "_connectionListener": [Function],
                  "createServer": [Function],
                  "get": [Function],
                  "globalAgent": Agent {
                    "_events": Object {
                      "free": [Function],
                      "newListener": [Function],
                    },
                    "_eventsCount": 2,
                    "_maxListeners": undefined,
                    "defaultPort": 80,
                    "freeSockets": Object {},
                    "keepAlive": false,
                    "keepAliveMsecs": 1000,
                    "maxFreeSockets": 256,
                    "maxSockets": Infinity,
                    "options": Object {
                      "path": null,
                    },
                    "protocol": "http:",
                    "requests": Object {},
                    "sockets": Object {},
                    Symbol(kCapture): false,
                  },
                  "maxHeaderSize": 8192,
                  "request": [Function],
                },
                "https:": Object {
                  "Agent": [Function],
                  "Server": [Function],
                  "createServer": [Function],
                  "get": [Function],
                  "globalAgent": Agent {
                    "_events": Object {
                      "free": [Function],
                      "newListener": [Function],
                    },
                    "_eventsCount": 2,
                    "_maxListeners": undefined,
                    "_sessionCache": Object {
                      "list": Array [],
                      "map": Object {},
                    },
                    "defaultPort": 443,
                    "freeSockets": Object {},
                    "keepAlive": false,
                    "keepAliveMsecs": 1000,
                    "maxCachedSessions": 100,
                    "maxFreeSockets": 256,
                    "maxSockets": Infinity,
                    "options": Object {
                      "path": null,
                    },
                    "protocol": "https:",
                    "requests": Object {},
                    "sockets": Object {},
                    Symbol(kCapture): false,
                  },
                  "request": [Function],
                },
              },
              "path": "/api/auth/register",
              "pathname": "/api/auth/register",
              "port": null,
              "protocol": "http:",
            },
            "_redirectCount": 0,
            "_redirects": Array [],
            "_requestBodyBuffers": Array [],
            "_requestBodyLength": 133,
            "_writableState": WritableState {
              "afterWriteTickInfo": null,
              "autoDestroy": false,
              "bufferProcessing": false,
              "bufferedRequest": null,
              "bufferedRequestCount": 0,
              "corked": 0,
              "corkedRequestsFree": Object {
                "entry": null,
                "finish": [Function],
                "next": null,
              },
              "decodeStrings": true,
              "defaultEncoding": "utf8",
              "destroyed": false,
              "emitClose": true,
              "ended": false,
              "ending": false,
              "errorEmitted": false,
              "finalCalled": false,
              "finished": false,
              "highWaterMark": 16384,
              "lastBufferedRequest": null,
              "length": 0,
              "needDrain": false,
              "objectMode": false,
              "onwrite": [Function],
              "pendingcb": 0,
              "prefinished": false,
              "sync": true,
              "writecb": null,
              "writelen": 0,
              "writing": false,
            },
            "writable": true,
            Symbol(kCapture): false,
          },
          "_removedConnection": false,
          "_removedContLen": false,
          "_removedTE": false,
          "_trailer": "",
          "chunkedEncoding": false,
          "connection": Socket {
            "_events": Object {
              "close": [Function],
              "error": [Function],
              "timeout": [Function],
            },
            "_eventsCount": 3,
            "_hadError": false,
            "_maxListeners": undefined,
            "bufferSize": 0,
            "connecting": false,
            "destroyed": false,
            "localAddress": "127.0.0.1",
            "localPort": 80,
            "pending": false,
            "readable": true,
            "remoteAddress": "127.0.0.1",
            "remoteFamily": "IPv4",
            "remotePort": 80,
            "timeout": 0,
            "writable": true,
            "writableLength": 0,
            Symbol(kCapture): false,
          },
          "end": [Function],
          "finished": true,
          "flushHeaders": [Function],
          "headers": Object {
            "accept": "application/json, text/plain, */*",
            "content-length": 133,
            "content-type": "application/json;charset=utf-8",
            "host": "localhost",
            "user-agent": "axios/0.19.2",
          },
          "interceptors": Array [],
          "method": "POST",
          "options": Object {
            "agent": undefined,
            "agents": Object {
              "http": undefined,
              "https": undefined,
            },
            "auth": undefined,
            "headers": Object {
              "accept": "application/json, text/plain, */*",
              "content-length": 133,
              "content-type": "application/json;charset=utf-8",
              "user-agent": "axios/0.19.2",
            },
            "host": "localhost:80",
            "hostname": "localhost",
            "maxBodyLength": 10485760,
            "maxRedirects": 21,
            "method": "POST",
            "nativeProtocols": Object {
              "http:": Object {
                "Agent": [Function],
                "ClientRequest": [Function],
                "IncomingMessage": [Function],
                "METHODS": Array [
                  "ACL",
                  "BIND",
                  "CHECKOUT",
                  "CONNECT",
                  "COPY",
                  "DELETE",
                  "GET",
                  "HEAD",
                  "LINK",
                  "LOCK",
                  "M-SEARCH",
                  "MERGE",
                  "MKACTIVITY",
                  "MKCALENDAR",
                  "MKCOL",
                  "MOVE",
                  "NOTIFY",
                  "OPTIONS",
                  "PATCH",
                  "POST",
                  "PROPFIND",
                  "PROPPATCH",
                  "PURGE",
                  "PUT",
                  "REBIND",
                  "REPORT",
                  "SEARCH",
                  "SOURCE",
                  "SUBSCRIBE",
                  "TRACE",
                  "UNBIND",
                  "UNLINK",
                  "UNLOCK",
                  "UNSUBSCRIBE",
                ],
                "OutgoingMessage": [Function],
                "STATUS_CODES": Object {
                  "100": "Continue",
                  "101": "Switching Protocols",
                  "102": "Processing",
                  "103": "Early Hints",
                  "200": "OK",
                  "201": "Created",
                  "202": "Accepted",
                  "203": "Non-Authoritative Information",
                  "204": "No Content",
                  "205": "Reset Content",
                  "206": "Partial Content",
                  "207": "Multi-Status",
                  "208": "Already Reported",
                  "226": "IM Used",
                  "300": "Multiple Choices",
                  "301": "Moved Permanently",
                  "302": "Found",
                  "303": "See Other",
                  "304": "Not Modified",
                  "305": "Use Proxy",
                  "307": "Temporary Redirect",
                  "308": "Permanent Redirect",
                  "400": "Bad Request",
                  "401": "Unauthorized",
                  "402": "Payment Required",
                  "403": "Forbidden",
                  "404": "Not Found",
                  "405": "Method Not Allowed",
                  "406": "Not Acceptable",
                  "407": "Proxy Authentication Required",
                  "408": "Request Timeout",
                  "409": "Conflict",
                  "410": "Gone",
                  "411": "Length Required",
                  "412": "Precondition Failed",
                  "413": "Payload Too Large",
                  "414": "URI Too Long",
                  "415": "Unsupported Media Type",
                  "416": "Range Not Satisfiable",
                  "417": "Expectation Failed",
                  "418": "I'm a Teapot",
                  "421": "Misdirected Request",
                  "422": "Unprocessable Entity",
                  "423": "Locked",
                  "424": "Failed Dependency",
                  "425": "Unordered Collection",
                  "426": "Upgrade Required",
                  "428": "Precondition Required",
                  "429": "Too Many Requests",
                  "431": "Request Header Fields Too Large",
                  "451": "Unavailable For Legal Reasons",
                  "500": "Internal Server Error",
                  "501": "Not Implemented",
                  "502": "Bad Gateway",
                  "503": "Service Unavailable",
                  "504": "Gateway Timeout",
                  "505": "HTTP Version Not Supported",
                  "506": "Variant Also Negotiates",
                  "507": "Insufficient Storage",
                  "508": "Loop Detected",
                  "509": "Bandwidth Limit Exceeded",
                  "510": "Not Extended",
                  "511": "Network Authentication Required",
                },
                "Server": [Function],
                "ServerResponse": [Function],
                "_connectionListener": [Function],
                "createServer": [Function],
                "get": [Function],
                "globalAgent": Agent {
                  "_events": Object {
                    "free": [Function],
                    "newListener": [Function],
                  },
                  "_eventsCount": 2,
                  "_maxListeners": undefined,
                  "defaultPort": 80,
                  "freeSockets": Object {},
                  "keepAlive": false,
                  "keepAliveMsecs": 1000,
                  "maxFreeSockets": 256,
                  "maxSockets": Infinity,
                  "options": Object {
                    "path": null,
                  },
                  "protocol": "http:",
                  "requests": Object {},
                  "sockets": Object {},
                  Symbol(kCapture): false,
                },
                "maxHeaderSize": 8192,
                "request": [Function],
              },
              "https:": Object {
                "Agent": [Function],
                "Server": [Function],
                "createServer": [Function],
                "get": [Function],
                "globalAgent": Agent {
                  "_events": Object {
                    "free": [Function],
                    "newListener": [Function],
                  },
                  "_eventsCount": 2,
                  "_maxListeners": undefined,
                  "_sessionCache": Object {
                    "list": Array [],
                    "map": Object {},
                  },
                  "defaultPort": 443,
                  "freeSockets": Object {},
                  "keepAlive": false,
                  "keepAliveMsecs": 1000,
                  "maxCachedSessions": 100,
                  "maxFreeSockets": 256,
                  "maxSockets": Infinity,
                  "options": Object {
                    "path": null,
                  },
                  "protocol": "https:",
                  "requests": Object {},
                  "sockets": Object {},
                  Symbol(kCapture): false,
                },
                "request": [Function],
              },
            },
            "path": "/api/auth/register",
            "pathname": "/api/auth/register",
            "port": 80,
            "proto": "http",
            "protocol": "http:",
          },
          "outputData": Array [],
          "outputSize": 0,
          "path": "/api/auth/register",
          "playbackStarted": false,
          "readyToStartPlaybackOnSocketEvent": false,
          "req": [Circular],
          "requestBodyBuffers": Array [
            Object {
              "data": Array [
                123,
                34,
                114,
                111,
                108,
                101,
                34,
                58,
                34,
                112,
                114,
                111,
                102,
                101,
                115,
                115,
                111,
                114,
                34,
                44,
                34,
                115,
                116,
                117,
                100,
                101,
                110,
                116,
                73,
                100,
                34,
                58,
                50,
                48,
                55,
                49,
                57,
                53,
                48,
                55,
                54,
                44,
                34,
                112,
                97,
                115,
                115,
                119,
                111,
                114,
                100,
                34,
                58,
                34,
                98,
                111,
                109,
                105,
                98,
                111,
                109,
                105,
                34,
                44,
                34,
                110,
                97,
                109,
                101,
                34,
                58,
                34,
                236,
                160,
                149,
                235,
                179,
                180,
                235,
                175,
                184,
                34,
                44,
                34,
                101,
                109,
                97,
                105,
                108,
                34,
                58,
                34,
                98,
                111,
                111,
                48,
                55,
                50,
                57,
                54,
                49,
                49,
                64,
                103,
                109,
                97,
                105,
                108,
                46,
                99,
                111,
                109,
                34,
                44,
                34,
                112,
                104,
                111,
                110,
                101,
                34,
                58,
                49,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                125,
              ],
              "type": "Buffer",
            },
          ],
          "res": IncomingMessage {
            "_consuming": true,
            "_dumped": false,
            "_events": Object {
              "data": [Function],
              "end": [Function],
              "error": [Function],
            },
            "_eventsCount": 3,
            "_maxListeners": undefined,
            "_readableState": ReadableState {
              "autoDestroy": false,
              "awaitDrain": 0,
              "buffer": BufferList {
                "head": null,
                "length": 0,
                "tail": null,
              },
              "decoder": null,
              "defaultEncoding": "utf8",
              "destroyed": false,
              "emitClose": true,
              "emittedReadable": false,
              "encoding": null,
              "endEmitted": true,
              "ended": true,
              "flowing": true,
              "highWaterMark": 16384,
              "length": 0,
              "needReadable": false,
              "objectMode": false,
              "pipes": null,
              "pipesCount": 0,
              "readableListening": false,
              "reading": false,
              "readingMore": false,
              "resumeScheduled": false,
              "sync": false,
              Symbol(kPaused): false,
            },
            "aborted": false,
            "client": Socket {
              "_events": Object {
                "close": [Function],
                "error": [Function],
                "timeout": [Function],
              },
              "_eventsCount": 3,
              "_hadError": false,
              "_maxListeners": undefined,
              "bufferSize": 0,
              "connecting": false,
              "destroyed": false,
              "localAddress": "127.0.0.1",
              "localPort": 80,
              "pending": false,
              "readable": true,
              "remoteAddress": "127.0.0.1",
              "remoteFamily": "IPv4",
              "remotePort": 80,
              "timeout": 0,
              "writable": true,
              "writableLength": 0,
              Symbol(kCapture): false,
            },
            "complete": true,
            "connection": Socket {
              "_events": Object {
                "close": [Function],
                "error": [Function],
                "timeout": [Function],
              },
              "_eventsCount": 3,
              "_hadError": false,
              "_maxListeners": undefined,
              "bufferSize": 0,
              "connecting": false,
              "destroyed": false,
              "localAddress": "127.0.0.1",
              "localPort": 80,
              "pending": false,
              "readable": true,
              "remoteAddress": "127.0.0.1",
              "remoteFamily": "IPv4",
              "remotePort": 80,
              "timeout": 0,
              "writable": true,
              "writableLength": 0,
              Symbol(kCapture): false,
            },
            "headers": Object {
              "content-type": "application/json",
            },
            "httpVersion": null,
            "httpVersionMajor": null,
            "httpVersionMinor": null,
            "method": null,
            "rawHeaders": Array [
              "Content-Type",
              "application/json",
            ],
            "rawTrailers": Array [],
            "readable": false,
            "redirects": Array [],
            "req": [Circular],
            "responseUrl": "http:/api/auth/register",
            "socket": Socket {
              "_events": Object {
                "close": [Function],
                "error": [Function],
                "timeout": [Function],
              },
              "_eventsCount": 3,
              "_hadError": false,
              "_maxListeners": undefined,
              "bufferSize": 0,
              "connecting": false,
              "destroyed": false,
              "localAddress": "127.0.0.1",
              "localPort": 80,
              "pending": false,
              "readable": true,
              "remoteAddress": "127.0.0.1",
              "remoteFamily": "IPv4",
              "remotePort": 80,
              "timeout": 0,
              "writable": true,
              "writableLength": 0,
              Symbol(kCapture): false,
            },
            "statusCode": 200,
            "statusMessage": null,
            "trailers": Object {},
            "upgrade": null,
            "url": "",
            Symbol(kCapture): false,
          },
          "response": IncomingMessage {
            "_consuming": true,
            "_dumped": false,
            "_events": Object {
              "data": [Function],
              "end": [Function],
              "error": [Function],
            },
            "_eventsCount": 3,
            "_maxListeners": undefined,
            "_readableState": ReadableState {
              "autoDestroy": false,
              "awaitDrain": 0,
              "buffer": BufferList {
                "head": null,
                "length": 0,
                "tail": null,
              },
              "decoder": null,
              "defaultEncoding": "utf8",
              "destroyed": false,
              "emitClose": true,
              "emittedReadable": false,
              "encoding": null,
              "endEmitted": true,
              "ended": true,
              "flowing": true,
              "highWaterMark": 16384,
              "length": 0,
              "needReadable": false,
              "objectMode": false,
              "pipes": null,
              "pipesCount": 0,
              "readableListening": false,
              "reading": false,
              "readingMore": false,
              "resumeScheduled": false,
              "sync": false,
              Symbol(kPaused): false,
            },
            "aborted": false,
            "client": Socket {
              "_events": Object {
                "close": [Function],
                "error": [Function],
                "timeout": [Function],
              },
              "_eventsCount": 3,
              "_hadError": false,
              "_maxListeners": undefined,
              "bufferSize": 0,
              "connecting": false,
              "destroyed": false,
              "localAddress": "127.0.0.1",
              "localPort": 80,
              "pending": false,
              "readable": true,
              "remoteAddress": "127.0.0.1",
              "remoteFamily": "IPv4",
              "remotePort": 80,
              "timeout": 0,
              "writable": true,
              "writableLength": 0,
              Symbol(kCapture): false,
            },
            "complete": true,
            "connection": Socket {
              "_events": Object {
                "close": [Function],
                "error": [Function],
                "timeout": [Function],
              },
              "_eventsCount": 3,
              "_hadError": false,
              "_maxListeners": undefined,
              "bufferSize": 0,
              "connecting": false,
              "destroyed": false,
              "localAddress": "127.0.0.1",
              "localPort": 80,
              "pending": false,
              "readable": true,
              "remoteAddress": "127.0.0.1",
              "remoteFamily": "IPv4",
              "remotePort": 80,
              "timeout": 0,
              "writable": true,
              "writableLength": 0,
              Symbol(kCapture): false,
            },
            "headers": Object {
              "content-type": "application/json",
            },
            "httpVersion": null,
            "httpVersionMajor": null,
            "httpVersionMinor": null,
            "method": null,
            "rawHeaders": Array [
              "Content-Type",
              "application/json",
            ],
            "rawTrailers": Array [],
            "readable": false,
            "redirects": Array [],
            "req": [Circular],
            "responseUrl": "http:/api/auth/register",
            "socket": Socket {
              "_events": Object {
                "close": [Function],
                "error": [Function],
                "timeout": [Function],
              },
              "_eventsCount": 3,
              "_hadError": false,
              "_maxListeners": undefined,
              "bufferSize": 0,
              "connecting": false,
              "destroyed": false,
              "localAddress": "127.0.0.1",
              "localPort": 80,
              "pending": false,
              "readable": true,
              "remoteAddress": "127.0.0.1",
              "remoteFamily": "IPv4",
              "remotePort": 80,
              "timeout": 0,
              "writable": true,
              "writableLength": 0,
              Symbol(kCapture): false,
            },
            "statusCode": 200,
            "statusMessage": null,
            "trailers": Object {},
            "upgrade": null,
            "url": "",
            Symbol(kCapture): false,
          },
          "sendDate": false,
          "shouldKeepAlive": true,
          "socket": Socket {
            "_events": Object {
              "close": [Function],
              "error": [Function],
              "timeout": [Function],
            },
            "_eventsCount": 3,
            "_hadError": false,
            "_maxListeners": undefined,
            "bufferSize": 0,
            "connecting": false,
            "destroyed": false,
            "localAddress": "127.0.0.1",
            "localPort": 80,
            "pending": false,
            "readable": true,
            "remoteAddress": "127.0.0.1",
            "remoteFamily": "IPv4",
            "remotePort": 80,
            "timeout": 0,
            "writable": true,
            "writableLength": 0,
            Symbol(kCapture): false,
          },
          "useChunkedEncodingByDefault": true,
          "writable": true,
          "write": [Function],
          Symbol(kCapture): false,
          Symbol(kNeedDrain): false,
          Symbol(corked): 0,
          Symbol(kOutHeaders): Object {
            "accept": Array [
              "accept",
              "application/json, text/plain, */*",
            ],
            "content-length": Array [
              "content-length",
              133,
            ],
            "content-type": Array [
              "content-type",
              "application/json;charset=utf-8",
            ],
            "host": Array [
              "host",
              "localhost",
            ],
            "user-agent": Array [
              "user-agent",
              "axios/0.19.2",
            ],
          },
        },
        "status": 200,
        "statusText": null,
      },
    },
    "type": "main/POST_REGISTER_SUCCESS",
  },
]
`;
